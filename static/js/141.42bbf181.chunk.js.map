{"version":3,"file":"static/js/141.42bbf181.chunk.js","mappings":"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","sources":["app/providers/react-query-provider.tsx","app/styles/styled/global-style.ts","app/styles/styled/default-theme.ts","app/providers/theme-provider.tsx","widgets/header/ui/styled.header.tsx","widgets/header/index.tsx","widgets/banner/ui/styled.banner.ts","widgets/banner/index.tsx","features/section-content/ui/styled.section.content.ts","features/section-content/index.tsx","widgets/users-section/index.tsx","widgets/create-user-section/index.tsx","pages/main/ui/styled.main.ts","pages/main/index.tsx","app/index.tsx","entities/users/model/fetch-more-users.tsx","entities/users/ui/user-card/styled.user-card.ts","shared/ui/tooltip/ui/styled.tooltip.ts","shared/lib/portal/model/portal.tsx","shared/ui/tooltip/model/tooltip.tsx","entities/users/ui/user-card/index.tsx","entities/users/ui/users-list/styled.users-list.ts","entities/users/ui/skeleton-card/styled.skeleton-card.ts","entities/users/assets/photo-cover.svg","entities/users/ui/skeleton-card/index.tsx","entities/users/ui/users-list/index.tsx","entities/users/api/get-users.ts","entities/users/api/create-new-user.ts","entities/users/lib/hooks/use-create-new-user.ts","entities/users/lib/hooks/use-yup-validation-resolver.js","entities/users/lib/hooks/use-form-validation.ts","entities/users/lib/hooks/use-users-query.ts","entities/users/model/fetch-users.tsx","entities/positions/api/get-positions.ts","entities/positions/model/fetch-positions.tsx","entities/positions/lib/hooks/use-positions-query.ts","features/create-new-user/model/create-new-user-form.tsx","features/create-new-user/ui/styled.form.ts","shared/api/config.ts"],"sourcesContent":["import { PropsWithChildren } from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport const ReactQueryProvider = ({\r\n    children,\r\n    ...props\r\n}: PropsWithChildren) => {\r\n    return (\r\n        <QueryClientProvider\r\n            client={queryClient}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </QueryClientProvider>\r\n    );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { ThemeType } from \"./default-theme\";\r\n\r\nexport const GlobalStyle = createGlobalStyle<{ theme: ThemeType }>`\r\n    *,\r\n    *::after,\r\n    *::before {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n        font-family: ${({ theme }) => theme.font.primary};\r\n        line-height: 1.625;\r\n        color: ${({ theme }) => theme.colors.text};\r\n\r\n        background-color: ${({ theme }) => theme.colors.body};\r\n    }\r\n`;\r\n","export const defaultTheme = {\r\n    colors: {\r\n        text: \"rgba(0, 0, 0, 0.87)\",\r\n        yellow: \"#f4e041\",\r\n        blue: \"#00bdd3\",\r\n        body: \"#F8F8F8\",\r\n        white: \"#fff\"\r\n    },\r\n    font: {\r\n        primary: \"Nunito\"\r\n    },\r\n    padding: {\r\n        mobile: \"0 1rem\",\r\n        tablet: \"0 2rem\",\r\n        laptop: \"0 2.5rem\"\r\n    },\r\n    screens: {\r\n        mobile: \"360px\",\r\n        tablet: \"768px\",\r\n        laptop: \"1024px\"\r\n    }\r\n};\r\n\r\nexport type ThemeType = typeof defaultTheme;\r\n","import { PropsWithChildren } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport { GlobalStyle } from \"app/styles\";\r\n\r\nimport { defaultTheme } from \"app/styles/styled/default-theme\";\r\n\r\nexport const StyledThemeProvider = ({\r\n    children,\r\n    ...props\r\n}: PropsWithChildren) => {\r\n    return (\r\n        <ThemeProvider\r\n            theme={defaultTheme}\r\n            {...props}\r\n        >\r\n            <GlobalStyle />\r\n            {children}\r\n        </ThemeProvider>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { StyledContainer } from \"shared/ui\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    min-height: 60px;\r\n    height: 60px;\r\n    width: 100%;\r\n\r\n    padding-top: 0.75rem;\r\n    padding-bottom: 0.75rem;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    background-color: #fff;\r\n`;\r\n\r\nexport const StyledHeaderContent = styled(StyledContainer)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    /* gap: 2rem; */\r\n`;\r\n","import { StyledFlex, StyledButton, Logo } from \"shared/ui\";\r\n\r\nimport { StyledHeader, StyledHeaderContent } from \"./ui\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <StyledHeader>\r\n            <StyledHeaderContent>\r\n                <Logo />\r\n                <StyledFlex gap=\"10px\">\r\n                    <StyledButton>Users</StyledButton>\r\n                    <StyledButton>Sign up</StyledButton>\r\n                </StyledFlex>\r\n            </StyledHeaderContent>\r\n        </StyledHeader>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { StyledContainer, StyledFlex } from \"shared/ui\";\r\n\r\nimport BannerBackgroundImage from \"../assets/bg-image.webp\";\r\nimport BannerBackgroundImage360w from \"../assets/bg-image-360w.webp\";\r\nimport BannerBackgroundImage768w from \"../assets/bg-image-768w.webp\";\r\nimport BannerBackgroundImage1024w from \"../assets/bg-image-1024w.webp\";\r\n\r\nexport const StyledBanner = styled(StyledContainer).attrs({\r\n    as: \"section\"\r\n})`\r\n    width: 100%;\r\n    max-width: 1170px;\r\n    height: 650px;\r\n    max-height: 650px;\r\n    min-height: 500px;\r\n\r\n    padding-top: 1rem;\r\n    padding-bottom: 1rem;\r\n\r\n    /* flex: 1 1 auto; */\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    background-image: linear-gradient(\r\n            0deg,\r\n            rgba(0, 0, 0, 0.5),\r\n            rgba(0, 0, 0, 0.5)\r\n        ),\r\n        url(${BannerBackgroundImage});\r\n\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    background-size: cover;\r\n\r\n    @media (max-width: 1024px) {\r\n        height: clamp(500px, 65dvw, 650px);\r\n        background-image: linear-gradient(\r\n                0deg,\r\n                rgba(0, 0, 0, 0.5),\r\n                rgba(0, 0, 0, 0.5)\r\n            ),\r\n            url(${BannerBackgroundImage1024w});\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        background-image: linear-gradient(\r\n                0deg,\r\n                rgba(0, 0, 0, 0.5),\r\n                rgba(0, 0, 0, 0.5)\r\n            ),\r\n            url(${BannerBackgroundImage768w});\r\n    }\r\n\r\n    @media (max-width: 360px) {\r\n        background-image: linear-gradient(\r\n                0deg,\r\n                rgba(0, 0, 0, 0.5),\r\n                rgba(0, 0, 0, 0.5)\r\n            ),\r\n            url(${BannerBackgroundImage360w});\r\n    }\r\n`;\r\n\r\nexport const StyledBannerContent = styled(StyledFlex)`\r\n    max-width: 380px;\r\n    flex-direction: column;\r\n    flex: 1 1 auto;\r\n\r\n    color: #fff;\r\n\r\n    & > h1 {\r\n        margin-bottom: 1.25rem;\r\n    }\r\n\r\n    & > p {\r\n        margin-bottom: 2rem;\r\n    }\r\n`;\r\n","import { StyledBanner, StyledBannerContent } from \"./ui\";\r\nimport { StyledTitle, StyledText, StyledButton } from \"shared/ui\";\r\n\r\nexport const Banner = () => {\r\n    return (\r\n        <StyledBanner>\r\n            <StyledBannerContent>\r\n                <StyledTitle>\r\n                    Test assignment for front-end developer\r\n                </StyledTitle>\r\n                <StyledText>\r\n                    What defines a good front-end developer is one that has\r\n                    skilled knowledge of HTML, CSS, JS with a vast understanding\r\n                    of User design thinking as they'll be building web\r\n                    interfaces with accessibility in mind. They should also be\r\n                    excited to learn, as the world of Front-End Development\r\n                    keeps evolving.\r\n                </StyledText>\r\n                <StyledButton>Sign up</StyledButton>\r\n            </StyledBannerContent>\r\n        </StyledBanner>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { StyledContainer } from \"shared/ui\";\r\n\r\nexport const StyledSectionContent = styled(StyledContainer).attrs({\r\n    as: \"section\",\r\n})`\r\n    width: 100%;\r\n    display: grid;\r\n    gap: 50px;\r\n    place-items: center;\r\n`;\r\n","import { Suspense } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nimport { StyledTitle } from \"shared/ui\";\r\n\r\nimport { StyledSectionContent } from \"./ui\";\r\n\r\ninterface SectionContentProps {\r\n    title: string;\r\n    content: React.ReactNode;\r\n}\r\n\r\nexport const SectionContent: React.FC<SectionContentProps> = ({\r\n    title,\r\n    content\r\n}) => {\r\n    const { ref, inView } = useInView({\r\n        triggerOnce: true,\r\n        fallbackInView: true,\r\n        threshold: 1\r\n    });\r\n\r\n    return (\r\n        <StyledSectionContent ref={ref}>\r\n            <StyledTitle>{title}</StyledTitle>\r\n            {inView && (\r\n                <Suspense fallback={<pre>Loading suspense...</pre>}>\r\n                    {content}\r\n                </Suspense>\r\n            )}\r\n        </StyledSectionContent>\r\n    );\r\n};\r\n","import { lazy } from \"react\";\r\n\r\nimport { SectionContent } from \"features\";\r\nimport { UsersList } from \"entities/users\";\r\n\r\nconst FetchUsers = lazy(() => import(\"entities/users/model/fetch-users\"));\r\n\r\nexport const UsersSection = () => {\r\n    return (\r\n        <SectionContent\r\n            title=\"Working with GET request\"\r\n            content={\r\n                <FetchUsers\r\n                    renderSuccess={data => <UsersList users={data} />}\r\n                />\r\n            }\r\n        />\r\n    );\r\n};\r\n","import { lazy } from \"react\";\r\nimport { SectionContent } from \"features\";\r\n\r\nconst CreateNewUserForm = lazy(\r\n    () => import(\"features/create-new-user/model/create-new-user-form\")\r\n);\r\n\r\nexport const CreateUserSection = () => {\r\n    return (\r\n        <SectionContent\r\n            title=\"Working with POST request\"\r\n            content={<CreateNewUserForm />}\r\n        />\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { StyledFlex } from \"shared/ui\";\r\n\r\nexport const StyledMain = styled(StyledFlex).attrs({ as: \"main\" })`\r\n    flex-direction: column;\r\n    gap: 140px;\r\n    padding-bottom: 100px;\r\n    width: 100%;\r\n    min-height: 100%;\r\n\r\n    /* flex: 1 1 auto; */\r\n\r\n    background-color: #f8f8f8;\r\n`;\r\n","import { Header, Banner, UsersSection, CreateUserSection } from \"widgets\";\r\nimport { StyledMain } from \"./ui\";\r\n\r\nexport const MainPage = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <StyledMain>\r\n                <Banner />\r\n                <UsersSection />\r\n                <CreateUserSection />\r\n            </StyledMain>\r\n        </>\r\n    );\r\n};\r\n","import \"./index.css\";\r\n\r\nimport { StyledThemeProvider, ReactQueryProvider } from \"./providers\";\r\nimport { MainPage } from \"pages\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <ReactQueryProvider>\r\n            <StyledThemeProvider>\r\n                <MainPage />\r\n            </StyledThemeProvider>\r\n        </ReactQueryProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { useMutationState } from \"@tanstack/react-query\";\r\n\r\nimport { StyledButton } from \"shared/ui\";\r\n\r\nimport { useUsersQuery } from \"../lib\";\r\n\r\ninterface FetchMoreUsersButtonProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport const FetchMoreUsersButton: React.FC<FetchMoreUsersButtonProps> = ({\r\n    children,\r\n    ...props\r\n}) => {\r\n    const { isFetching, hasNextPage, fetchNextPage } = useUsersQuery();\r\n\r\n    const mutationState = useMutationState();\r\n\r\n    const handleClick: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n        fetchNextPage();\r\n    };\r\n\r\n    return (\r\n        <StyledButton\r\n            onClick={handleClick}\r\n            disabled={\r\n                !hasNextPage ||\r\n                isFetching ||\r\n                mutationState.at(-1)?.status === \"pending\"\r\n            }\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledButton>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { StyledCard } from \"shared/ui\";\r\n\r\nexport const StyledUserCard = styled(StyledCard)`\r\n    & *:not(img, a) {\r\n        display: block;\r\n        width: 100%;\r\n        overflow: hidden;\r\n        text-align: center;\r\n    }\r\n\r\n    & > div {\r\n        font-size: 0;\r\n    }\r\n\r\n    & a {\r\n        display: inline-block;\r\n        width: max-content;\r\n        max-width: 100%;\r\n\r\n        overflow-x: hidden;\r\n\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n\r\n    & p,\r\n    a {\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        font-size: 1rem;\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTooltip = styled.span`\r\n    display: none;\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: max-content;\r\n    max-width: calc(100% - 4rem);\r\n    padding: 0.25rem 1rem;\r\n\r\n    color: #fff;\r\n    text-overflow: ellipsis;\r\n\r\n    overflow: hidden;\r\n\r\n    border-radius: 0.25rem;\r\n    background: rgba(0, 0, 0, 0.87);\r\n\r\n    &[aria-hidden=\"false\"] {\r\n        animation: fadeout 0.3s ease-in;\r\n        animation-delay: 0.5s;\r\n        animation-fill-mode: forwards;\r\n        /* opacity: 1; */\r\n    }\r\n\r\n    &[aria-hidden=\"true\"] {\r\n        animation: appearance 0.3s ease-out;\r\n        /* animation-delay: 0.5s; */\r\n        animation-fill-mode: forwards;\r\n        /* opacity: 0; */\r\n    }\r\n\r\n    opacity: 0;\r\n\r\n    @keyframes appearance {\r\n        0% {\r\n            opacity: 1;\r\n        }\r\n        100% {\r\n            opacity: 0;\r\n        }\r\n    }\r\n\r\n    @keyframes fadeout {\r\n        0% {\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    @media (hover: hover) {\r\n        &:hover {\r\n            &::after {\r\n                /* visibility: \"hidden\";\r\n                opacity: 0; */\r\n                animation: appearance 1s ease-in;\r\n                /* animation-direction: reverse; */\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import { PropsWithChildren } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst portalRoot = document.getElementById(\"modals-root\")!;\r\n\r\nexport function Portal({ children }: PropsWithChildren) {\r\n    return ReactDOM.createPortal(children, portalRoot);\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { StyledTooltip } from \"../ui\";\r\nimport { Portal } from \"shared/lib\";\r\n\r\ninterface TooltipProps {\r\n    children: React.ReactElement<HTMLAnchorElement>;\r\n}\r\n\r\nexport const Tooltip: React.FC<TooltipProps> = ({ children }) => {\r\n    const tooltipRef = useRef<HTMLSpanElement>(null);\r\n\r\n    try {\r\n        const anchorElement = React.Children.only(children);\r\n\r\n        if (!React.isValidElement(anchorElement)) return;\r\n\r\n        const props = anchorElement.props;\r\n        const anchorText = String(props.children);\r\n\r\n        const handleMouseEvent = (\r\n            event: React.MouseEvent<HTMLAnchorElement>\r\n        ) => {\r\n            if (tooltipRef.current) {\r\n                const viewportWidth = window.innerWidth;\r\n\r\n                const tooltipElement = tooltipRef.current;\r\n\r\n                tooltipElement.style.display = \"inline-block\";\r\n\r\n                const tooltipRect = tooltipElement.getBoundingClientRect();\r\n                const anchorRect = event.currentTarget.getBoundingClientRect();\r\n\r\n                tooltipElement.setAttribute(\"aria-hidden\", \"false\");\r\n\r\n                if (\r\n                    event.clientX +\r\n                        (tooltipRect.right - tooltipRect.left) -\r\n                        16 >\r\n                    viewportWidth - 32\r\n                ) {\r\n                    console.log(\"tooltip\");\r\n\r\n                    tooltipElement.style.left = `calc(${\r\n                        viewportWidth -\r\n                        32 -\r\n                        (tooltipRect.right - tooltipRect.left)\r\n                    }px - 1rem)`;\r\n                } else {\r\n                    tooltipElement.style.left = `calc(${event.clientX}px - 1rem)`;\r\n                }\r\n\r\n                tooltipElement.style.top = `calc(${anchorRect.bottom}px + 1rem)`;\r\n            }\r\n        };\r\n\r\n        return (\r\n            <>\r\n                {React.cloneElement(\r\n                    anchorElement as React.ReactElement<HTMLLabelElement> &\r\n                        React.ReactElement,\r\n                    {\r\n                        onMouseOver: handleMouseEvent,\r\n                        onMouseLeave: () => {\r\n                            if (tooltipRef.current) {\r\n                                tooltipRef.current.setAttribute(\r\n                                    \"aria-hidden\",\r\n                                    \"true\"\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                )}\r\n                <Portal>\r\n                    <StyledTooltip\r\n                        aria-hidden=\"true\"\r\n                        role=\"tooltip\"\r\n                        onAnimationEnd={() => {\r\n                            if (tooltipRef.current) {\r\n                                const isAriaHidden =\r\n                                    tooltipRef.current.getAttribute(\r\n                                        \"aria-hidden\"\r\n                                    );\r\n\r\n                                if (isAriaHidden === \"true\") {\r\n                                    tooltipRef.current.style.display = \"none\";\r\n                                }\r\n                            }\r\n                        }}\r\n                        ref={tooltipRef}\r\n                    >\r\n                        {anchorText}\r\n                    </StyledTooltip>\r\n                </Portal>\r\n            </>\r\n        );\r\n    } catch (error) {\r\n        return <>{children}</>;\r\n    }\r\n};\r\n","import { memo } from \"react\";\r\n\r\nimport { User } from \"../../types\";\r\nimport { StyledUserCard } from \"./styled.user-card\";\r\nimport { Tooltip } from \"shared/ui/tooltip\";\r\n\r\ninterface UserCardProps {\r\n    user: User;\r\n}\r\n\r\nexport const UserCard: React.FC<UserCardProps> = memo(({ user }) => {\r\n    return (\r\n        <StyledUserCard>\r\n            <img\r\n                src={user.photo}\r\n                alt={user.name}\r\n                loading=\"lazy\"\r\n            />\r\n            <p>{user.name}</p>\r\n            <div>\r\n                <p>{user.position}</p>\r\n                <Tooltip>\r\n                    <a\r\n                        id={user.id.toString()}\r\n                        href={`mailto:${user.email}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        {user.email}\r\n                    </a>\r\n                </Tooltip>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n        </StyledUserCard>\r\n    );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledUsersList = styled.ul.attrs({ role: \"list\" })`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, minmax(0, 370px));\r\n    gap: 30px;\r\n\r\n    @media (max-width: 1024px) {\r\n        grid-template-columns: repeat(2, minmax(0, 370px));\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        grid-template-columns: minmax(0, 370px);\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { StyledCard } from \"shared/ui\";\r\n\r\nexport const StyledSkeletonCard = styled(StyledCard)`\r\n    grid-template-rows: max-content 1fr;\r\n`;\r\n","var _circle, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPhotoCover(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 70,\n    height: 70,\n    viewBox: \"0 0 70 70\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 35,\n    cy: 35,\n    r: 35,\n    fill: \"white\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.9524 70C15.6305 70.0018 -0.0753237 54.2415 0.000271752 34.9298C0.0776671 15.5786 15.7241 -0.0341429 35.0046 5.60763e-05C54.3588 0.036055 69.944 15.593 69.9998 34.937C70.0574 54.3045 54.3678 70 34.9524 70ZM11.2442 57.5552C24.1494 71.3212 46.1603 71.0656 58.7145 57.5642C58.4499 57.2582 58.198 56.9306 57.9082 56.639C56.6014 55.325 55.0535 54.3369 53.3814 53.5917C51.1964 52.6179 48.9447 51.7917 46.738 50.8666C45.6923 50.4274 44.6466 49.9648 43.6638 49.4032C42.5425 48.7642 41.8153 47.8031 41.7829 46.4315C41.7577 45.3245 41.7217 44.2158 41.6713 43.1088C41.6372 42.3888 41.8333 41.7714 42.2815 41.1936C43.9842 38.9887 44.8716 36.485 44.8878 33.6915C44.8896 33.2523 45.0731 32.9859 45.4043 32.7249C46.1423 32.1399 46.7974 31.4505 46.9954 30.4984C47.2078 29.476 47.359 28.4356 47.4562 27.3935C47.5354 26.5457 47.4436 25.7177 46.3655 25.6295C46.5167 24.3497 46.7164 23.1672 46.7866 21.9792C46.927 19.5529 46.6642 17.1824 45.4421 15.0152C44.3892 13.1487 42.8017 12.1245 40.631 12.0417C40.343 12.0309 40.0479 11.9427 39.7725 11.8473C37.0222 10.9023 34.182 10.6125 31.3508 11.1777C25.8395 12.2757 22.5421 17.0132 23.2045 22.6524C23.3197 23.6262 23.505 24.5909 23.6688 25.6349C22.9129 25.6745 22.4683 26.1101 22.4827 26.8301C22.5223 28.9702 22.5619 31.1337 24.4554 32.6439C24.9288 33.0219 25.0494 33.4971 25.098 34.0551C25.1663 34.856 25.2581 35.6588 25.3859 36.4526C25.6847 38.3173 26.7719 39.8059 27.7474 41.352C27.9886 41.7354 28.1848 42.2178 28.2028 42.6624C28.2514 43.8882 28.2028 45.1175 28.1758 46.3451C28.1488 47.5763 27.5836 48.5266 26.5775 49.2088C26.1077 49.5274 25.6271 49.8496 25.1088 50.0692C23.8704 50.5966 22.6123 51.0826 21.3524 51.5559C18.7425 52.5387 16.1579 53.5719 13.8378 55.1594C12.8659 55.8236 11.9677 56.5634 11.2442 57.5552Z\",\n    fill: \"#D0CFCF\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPhotoCover);\nexport default __webpack_public_path__ + \"static/media/photo-cover.fb98cf13a87225efe558669bdc541ac7.svg\";\nexport { ForwardRef as ReactComponent };","import { StyledSpinner } from \"shared/ui\";\r\n\r\nimport { StyledSkeletonCard } from \"./styled.skeleton-card\";\r\n\r\nimport Photo from \"../../assets/photo-cover.svg\";\r\n\r\nexport const SkeletonCard = () => {\r\n    return (\r\n        <StyledSkeletonCard>\r\n            <img\r\n                src={Photo}\r\n                alt=\"Default user photo\"\r\n            />\r\n            <div>\r\n                <StyledSpinner />\r\n            </div>\r\n        </StyledSkeletonCard>\r\n    );\r\n};\r\n","import { StyledUsersList } from \"./styled.users-list\";\r\nimport { UserCard } from \"../user-card\";\r\nimport { FetchMoreUsersButton } from \"../../model\";\r\n// import SkeletonCard from \"components/SkeletonCard\";\r\n\r\nimport { SkeletonCard } from \"../skeleton-card\";\r\n\r\nimport { User } from \"../../types\";\r\n\r\ninterface UsersListProps {\r\n    users: User[] | undefined[];\r\n}\r\n\r\nexport const UsersList: React.FC<UsersListProps> = ({ users }) => {\r\n    return (\r\n        <>\r\n            <StyledUsersList>\r\n                {users.map(user => {\r\n                    if (user !== undefined) {\r\n                        return (\r\n                            <UserCard\r\n                                key={user.id}\r\n                                user={user}\r\n                            />\r\n                        );\r\n                    } else {\r\n                        return <SkeletonCard />;\r\n                    }\r\n                })}\r\n            </StyledUsersList>\r\n\r\n            <FetchMoreUsersButton>Show more</FetchMoreUsersButton>\r\n        </>\r\n    );\r\n};\r\n","import { axios } from \"shared\";\r\nimport { GetUsersResponse, GetUserRequestParams } from \"../types\";\r\n\r\nexport const getUsers = async ({ page, count }: GetUserRequestParams) => {\r\n    const { data } = await axios.get<GetUsersResponse>(\"/users\", {\r\n        params: { page, count }\r\n    });\r\n\r\n    return data;\r\n};\r\n","import { axios } from \"shared\";\r\nimport {\r\n    NewUser,\r\n    GetTokenResponse,\r\n    CreateNewUserSuccessResponse\r\n} from \"../types\";\r\n\r\nconst getToken = async () => {\r\n    const {\r\n        data: { token }\r\n    } = await axios.get<GetTokenResponse>(\"/token\");\r\n\r\n    return token;\r\n};\r\n\r\nexport const createNewUser = async (userFormData: NewUser) => {\r\n    const userData = new FormData();\r\n\r\n    Object.entries(userFormData).forEach(([key, value]) => {\r\n        userData.append(\r\n            key,\r\n            value instanceof FileList\r\n                ? value[0]\r\n                : // : key === \"email\"\r\n                  // ? (value as string).toLowerCase()\r\n                  (value as string)\r\n        );\r\n    });\r\n\r\n    const { data } = await axios.post<CreateNewUserSuccessResponse>(\r\n        \"/users\",\r\n        userData,\r\n        {\r\n            headers: { Token: await getToken() }\r\n        }\r\n    );\r\n\r\n    return data;\r\n};\r\n","import {\r\n    useQueryClient,\r\n    useMutation,\r\n    InfiniteData\r\n} from \"@tanstack/react-query\";\r\n\r\nimport { createNewUser } from \"../../api\";\r\nimport {\r\n    NewUser,\r\n    GetUsersResponse,\r\n    CreateNewUserErrorResponse\r\n} from \"../../types\";\r\nimport { AxiosError } from \"axios\";\r\n\r\nexport const useCreateNewUser = () => {\r\n    const queryClient = useQueryClient();\r\n\r\n    const createNewUserMutation = useMutation({\r\n        mutationKey: [\"addUser\"],\r\n        mutationFn: (userFormData: NewUser) => createNewUser(userFormData),\r\n\r\n        onMutate: () => {\r\n            queryClient.setQueryData(\r\n                [\"users\", \"infinite\"],\r\n                (data: InfiniteData<GetUsersResponse> | undefined) => {\r\n                    if (!data) return undefined;\r\n\r\n                    return {\r\n                        pages: data.pages.slice(0, 1),\r\n                        pageParams: data.pageParams.slice(0, 1)\r\n                    };\r\n                }\r\n            );\r\n        },\r\n\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries(\r\n                {\r\n                    queryKey: [\"users\", \"infinite\"],\r\n                    exact: true,\r\n                    refetchType: \"active\"\r\n                },\r\n                {\r\n                    throwOnError: true,\r\n                    cancelRefetch: true\r\n                }\r\n            );\r\n        },\r\n\r\n        onError: (error: AxiosError<CreateNewUserErrorResponse, any>) => {\r\n            if (!error?.response?.data?.fails) {\r\n                alert(error?.response?.data?.message || error?.message);\r\n                return;\r\n            }\r\n            alert(\r\n                Object.values(error?.response?.data?.fails)\r\n                    .flatMap(fail => fail.join(\", \"))\r\n                    .join(\", \")\r\n            );\r\n        }\r\n    });\r\n\r\n    return createNewUserMutation;\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { object, string, number, mixed } from \"yup\";\r\n\r\nexport const useYupValidationResolver = validationSchema =>\r\n    useCallback(\r\n        async data => {\r\n            try {\r\n                const values = await validationSchema.validate(data, {\r\n                    abortEarly: false\r\n                });\r\n\r\n                return {\r\n                    values,\r\n                    errors: {}\r\n                };\r\n            } catch (errors) {\r\n                return {\r\n                    values: {},\r\n                    errors: errors?.inner.reduce(\r\n                        (allErrors, currentError) => ({\r\n                            ...allErrors,\r\n                            [currentError.path]: {\r\n                                type: currentError.type ?? \"validation\",\r\n                                message: currentError.message\r\n                            }\r\n                        }),\r\n                        {}\r\n                    )\r\n                };\r\n            }\r\n        },\r\n        [validationSchema]\r\n    );\r\n\r\nexport const validationSchema = object({\r\n    name: string()\r\n        .required(\"Name is required field\")\r\n        .min(3, \"Min length must be greater than 3 characters\")\r\n        .max(60, \"Max length must be less than 60 characters\"),\r\n    email: string()\r\n        .required(\"Email is required field\")\r\n        .email(\"Invalid email address\")\r\n        .min(3, \"Min length must be greater than 3 characters\")\r\n        .max(60, \"Max length must be less than 60 characters\"),\r\n    phone: string()\r\n        .required(\"Phone is required field\")\r\n        .matches(/^[+]{0,1}380([0-9]{9})$/, \"Invalid format of phone number\"),\r\n    position_id: number().required().positive(),\r\n    photo: mixed()\r\n        .test(\"required\", \"File is required field\", fileList => {\r\n            return fileList && fileList[0];\r\n        })\r\n        .test(\r\n            \"maxSize\",\r\n            \"File size exceeds the maximum limit (10MB)\",\r\n            fileList => {\r\n                if (!(fileList && fileList[0])) return true;\r\n                return fileList[0]?.size <= 10 * 1024 * 1024;\r\n            }\r\n        )\r\n        .test(\r\n            \"minSize\",\r\n            \"Image size is smaller than the minimum limit (70px)\",\r\n            fileList => {\r\n                if (!(fileList && fileList[0])) return true;\r\n\r\n                return new Promise(resolve => {\r\n                    const image = new Image();\r\n\r\n                    image.onload = () => {\r\n                        const { width, height } = image;\r\n                        if (width < 70 || height < 70) {\r\n                            resolve(false);\r\n                        } else {\r\n                            resolve(true);\r\n                        }\r\n                    };\r\n\r\n                    image.onerror = () => {\r\n                        resolve(false);\r\n                    };\r\n\r\n                    image.src = URL.createObjectURL(fileList[0]);\r\n                });\r\n            }\r\n        )\r\n});\r\n","import { useForm } from \"react-hook-form\";\r\nimport { NewUser } from \"../../types\";\r\nimport {\r\n    useYupValidationResolver,\r\n    validationSchema\r\n} from \"./use-yup-validation-resolver\";\r\n\r\nexport const useUserDataValidation = () => {\r\n    const yupResolver = useYupValidationResolver(validationSchema);\r\n\r\n    const formValidator = useForm<NewUser>({\r\n        mode: \"onChange\",\r\n        resolver: yupResolver,\r\n        defaultValues: { name: \"\", email: \"\", phone: \"+380\", position_id: \"1\" }\r\n    });\r\n\r\n    return formValidator;\r\n};\r\n","import { useInfiniteQuery } from \"@tanstack/react-query\";\r\n\r\nimport { getUsers } from \"../../api\";\r\n\r\nexport const useUsersQuery = () => {\r\n    const queryClient = useInfiniteQuery({\r\n        queryKey: [\"users\", \"infinite\"],\r\n        queryFn: ({ pageParam }) => getUsers(pageParam),\r\n\r\n        defaultPageParam: { page: 1, count: 6 },\r\n        refetchOnWindowFocus: false,\r\n        refetchOnMount: false,\r\n        retry: 3,\r\n\r\n        getNextPageParam: lastPage => {\r\n            return lastPage.page < lastPage.total_pages\r\n                ? { page: lastPage.page + 1, count: lastPage.count }\r\n                : undefined;\r\n        }\r\n    });\r\n\r\n    return queryClient;\r\n};\r\n","import { Preloader } from \"shared/ui\";\r\n\r\nimport { useUsersQuery } from \"../lib\";\r\nimport { User } from \"../types\";\r\n\r\ninterface FetchUsersProps {\r\n    renderSuccess: (users: User[]) => React.ReactElement;\r\n    loadingFallback?: React.ReactNode;\r\n    renderError?: (error: string) => React.ReactElement;\r\n}\r\n\r\nconst FetchUsers: React.FC<FetchUsersProps> = ({\r\n    renderSuccess,\r\n    loadingFallback = <Preloader />,\r\n    renderError = error => <pre>{error}</pre>\r\n}) => {\r\n    const { data, status, error, isFetchingNextPage } = useUsersQuery();\r\n\r\n    if (status === \"error\") return renderError(error.message);\r\n    if (status === \"pending\") return loadingFallback;\r\n    if (data && data.pages && data.pages.length !== 0) {\r\n        console.log(new Array(6).map((_, i) => ({})));\r\n\r\n        const users = data.pages\r\n            .flatMap(data => data?.users)\r\n            .sort(\r\n                (a, b) => b.registration_timestamp - a.registration_timestamp\r\n            );\r\n\r\n        if (isFetchingNextPage) {\r\n            return renderSuccess([...users, ...Array(6)]);\r\n        }\r\n\r\n        return renderSuccess(users);\r\n    }\r\n\r\n    return <></>;\r\n};\r\n\r\nexport default FetchUsers;\r\n","import { axios } from \"shared\";\r\nimport { GetPositionsResponse } from \"../types\";\r\n\r\nexport const getPositions = async () => {\r\n    const {\r\n        data: { positions }\r\n    } = await axios.get<GetPositionsResponse>(`/positions`);\r\n\r\n    return positions;\r\n};\r\n","import { StyledSpinner } from \"shared/ui\";\r\n\r\nimport { usePositionsQuery } from \"../lib\";\r\nimport { Position } from \"../types\";\r\n\r\ninterface FetchPositionsProps {\r\n    renderSuccess: (positions: Position[]) => React.ReactElement;\r\n    loadingFallback?: React.ReactNode;\r\n    renderError?: (error: string) => React.ReactElement;\r\n}\r\n\r\nexport const FetchPositions: React.FC<FetchPositionsProps> = ({\r\n    renderSuccess,\r\n    loadingFallback = <StyledSpinner />,\r\n    renderError = error => <pre>{JSON.stringify(error)}</pre>\r\n}) => {\r\n    const { data: positions, status, error } = usePositionsQuery();\r\n\r\n    if (status === \"error\") return renderError(error.message);\r\n    if (status === \"pending\") return loadingFallback;\r\n    if (positions && positions.length !== 0) return renderSuccess(positions);\r\n\r\n    return <></>;\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\n\r\nimport { getPositions } from \"../../api\";\r\n\r\nexport const usePositionsQuery = () => {\r\n    const query = useQuery({\r\n        queryKey: [\"positions\"],\r\n        queryFn: getPositions,\r\n\r\n        refetchOnWindowFocus: false,\r\n        retry: 3\r\n    });\r\n\r\n    return query;\r\n};\r\n","import { SubmitHandler } from \"react-hook-form\";\r\n\r\nimport {\r\n    useUserDataValidation,\r\n    useCreateNewUser,\r\n    NewUser\r\n} from \"entities/users\";\r\nimport { FetchPositions } from \"entities/positions\";\r\nimport { Input, StyledButton, SuccessRegistration } from \"shared/ui\";\r\n\r\nimport { StyledForm } from \"../ui\";\r\n\r\nconst CreateNewUserForm = () => {\r\n    const {\r\n        register,\r\n        formState: {\r\n            errors: { name, email, phone, photo },\r\n            isValid\r\n        },\r\n        handleSubmit\r\n    } = useUserDataValidation();\r\n\r\n    const { mutate, isSuccess, isPending } = useCreateNewUser();\r\n\r\n    const updateFilename: React.ChangeEventHandler<\r\n        HTMLInputElement\r\n    > = event => {\r\n        const imageNameElement = document.getElementById(\"photo-name\");\r\n\r\n        if (!imageNameElement) return;\r\n\r\n        const [image] = Array.from(event.target.files as FileList) as File[];\r\n\r\n        if (!image) {\r\n            imageNameElement.innerText = \"Upload your image\";\r\n            return;\r\n        }\r\n\r\n        imageNameElement.innerText = image?.name;\r\n    };\r\n\r\n    const createNewUser: SubmitHandler<NewUser> = data => {\r\n        mutate(data);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isSuccess ? (\r\n                <SuccessRegistration />\r\n            ) : (\r\n                <>\r\n                    <StyledForm\r\n                        id=\"create-user-form\"\r\n                        onSubmit={handleSubmit(createNewUser)}\r\n                        encType=\"multipart/form-data\"\r\n                    >\r\n                        <fieldset>\r\n                            <Input\r\n                                label=\"your name\"\r\n                                aria-invalid={!!name}\r\n                                errorText={name?.message}\r\n                                {...register(\"name\")}\r\n                            />\r\n                            <Input\r\n                                type=\"email\"\r\n                                label=\"email\"\r\n                                aria-invalid={!!email}\r\n                                errorText={email?.message}\r\n                                {...register(\"email\")}\r\n                            />\r\n                            <Input\r\n                                type=\"tel\"\r\n                                label=\"phone\"\r\n                                aria-invalid={!!phone}\r\n                                helperText=\"+38 (XXX) XXX - XX - XX\"\r\n                                errorText={phone?.message}\r\n                                {...register(\"phone\")}\r\n                            />\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <FetchPositions\r\n                                renderSuccess={positions => {\r\n                                    return (\r\n                                        <>\r\n                                            {positions.map(position => (\r\n                                                <Input\r\n                                                    key={position.id}\r\n                                                    type=\"radio\"\r\n                                                    label={position.name}\r\n                                                    value={position.id}\r\n                                                    {...register(\"position_id\")}\r\n                                                />\r\n                                            ))}\r\n                                        </>\r\n                                    );\r\n                                }}\r\n                            />\r\n                        </fieldset>\r\n                        <Input\r\n                            type=\"file\"\r\n                            accept={\"image/jpg, image/jpeg, image/png\"}\r\n                            multiple={false}\r\n                            aria-invalid={!!photo}\r\n                            errorText={photo?.message}\r\n                            {...register(\"photo\", {\r\n                                onChange: updateFilename\r\n                            })}\r\n                        />\r\n                    </StyledForm>\r\n\r\n                    <StyledButton\r\n                        type=\"submit\"\r\n                        form=\"create-user-form\"\r\n                        disabled={!isValid || isPending}\r\n                    >\r\n                        Sign up\r\n                    </StyledButton>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateNewUserForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    width: 100%;\r\n    max-width: 380px;\r\n\r\n    display: grid;\r\n    gap: 50px;\r\n    grid-template-columns: minmax(0, 1fr);\r\n    /* overflow: hidden; */\r\n\r\n    & > fieldset {\r\n        display: grid;\r\n\r\n        border: none;\r\n    }\r\n\r\n    & > fieldset:nth-child(1) {\r\n        gap: 50px;\r\n    }\r\n\r\n    & > fieldset:nth-child(2) {\r\n        gap: 0.5rem;\r\n    }\r\n`;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL =\r\n    \"https://frontend-test-assignment-api.abz.agency/api/v1\";\r\n\r\naxios.defaults.timeout = 5000;\r\n\r\nexport default axios;\r\n"],"names":["queryClient","QueryClient","ReactQueryProvider","children","props","QueryClientProvider","client","GlobalStyle","createGlobalStyle","theme","font","primary","colors","text","body","defaultTheme","yellow","blue","white","padding","mobile","tablet","laptop","screens","StyledThemeProvider","StyledHeader","styled","StyledHeaderContent","StyledContainer","Header","gap","StyledBanner","attrs","as","BannerBackgroundImage","BannerBackgroundImage1024w","BannerBackgroundImage768w","BannerBackgroundImage360w","StyledBannerContent","StyledFlex","Banner","StyledSectionContent","SectionContent","title","content","useInView","triggerOnce","fallbackInView","threshold","ref","inView","Suspense","fallback","FetchUsers","lazy","UsersSection","renderSuccess","data","users","CreateNewUserForm","CreateUserSection","StyledMain","MainPage","FetchMoreUsersButton","useUsersQuery","isFetching","hasNextPage","fetchNextPage","mutationState","useMutationState","onClick","disabled","at","status","StyledUserCard","StyledCard","StyledTooltip","portalRoot","document","getElementById","Portal","ReactDOM","Tooltip","tooltipRef","useRef","anchorElement","React","anchorText","String","onMouseOver","event","current","viewportWidth","window","innerWidth","tooltipElement","style","display","tooltipRect","getBoundingClientRect","anchorRect","currentTarget","setAttribute","clientX","right","left","console","log","top","bottom","onMouseLeave","role","onAnimationEnd","getAttribute","error","UserCard","memo","user","src","photo","alt","name","loading","position","id","toString","href","email","target","rel","phone","StyledUsersList","StyledSkeletonCard","SkeletonCard","Photo","UsersList","map","undefined","getUsers","page","count","axios","params","getToken","token","createNewUser","userFormData","userData","FormData","Object","entries","forEach","key","value","append","FileList","Token","headers","post","useCreateNewUser","useQueryClient","useMutation","mutationKey","mutationFn","onMutate","setQueryData","pages","slice","pageParams","onSuccess","invalidateQueries","queryKey","exact","refetchType","throwOnError","cancelRefetch","onError","response","fails","alert","values","flatMap","fail","join","message","validationSchema","object","string","required","min","max","matches","position_id","number","positive","mixed","test","fileList","size","Promise","resolve","image","Image","onload","width","height","onerror","URL","createObjectURL","useUserDataValidation","yupResolver","useCallback","validate","abortEarly","errors","inner","reduce","allErrors","currentError","path","type","useYupValidationResolver","useForm","mode","resolver","defaultValues","useInfiniteQuery","queryFn","pageParam","defaultPageParam","refetchOnWindowFocus","refetchOnMount","retry","getNextPageParam","lastPage","total_pages","loadingFallback","renderError","isFetchingNextPage","length","Array","_","i","sort","a","b","registration_timestamp","getPositions","positions","FetchPositions","JSON","stringify","useQuery","register","formState","isValid","handleSubmit","mutate","isSuccess","isPending","onSubmit","encType","label","errorText","helperText","accept","multiple","onChange","imageNameElement","from","files","innerText","form","StyledForm"],"sourceRoot":""}